
name: GitHub Actions CI

on: 
  push:
    branches: 
    - develop
  pull_request:
    branches: 
    - develop

jobs:

  linux:
    runs-on: ubuntu-latest
    container: ${{ matrix.container }}
    env:
      GH_JOBNAME: ${{ matrix.jobname }}
      GH_OS: Linux
    strategy:
      fail-fast: false
      matrix:
        jobname: [
          ubuntu20-gcc9-openmpi
        ]
        include:
        - jobname: ubuntu20-gcc9-openmpi
          container: 
            image: williamfgc/qmcpack-ci:ubuntu20-openmpi
            options: -u 1001

    steps:
    - name: Checkout Action
      uses: actions/checkout@v1

    - name: Configure
      run: tests/test_automation/github-actions/ci/run_step.sh configure

    - name: Build
      run: tests/test_automation/github-actions/ci/run_step.sh build

    - name: Test
      run: tests/test_automation/github-actions/ci/run_step.sh test

  dynamic:
    runs-on: ubuntu-latest
    container: ${{ matrix.container }}
    env:
      GH_JOBNAME: ${{ matrix.jobname }}
      GH_OS: Linux
    strategy:
      fail-fast: false
      matrix:
        jobname: [
          clang-asan,  # address sanitizer (including leaks)
          clang-ubsan, # undefined behavior sanitizer
          clang-tsan,  # thread race sanitizer (expensive)
          clang-msan,  # unintialize memory sanitizer (expensive)
        ]
        include:
        - jobname: clang-asan
          container: 
            image: williamfgc/qmcpack-ci:ubuntu20-openmpi
            options: -u 1001

        - jobname: clang-ubsan
          container: 
            image: williamfgc/qmcpack-ci:ubuntu20-openmpi
            options: -u 1001
            
        - jobname: clang-msan
          container: 
            image: williamfgc/qmcpack-ci:ubuntu20-openmpi
            options: -u 1001
       
        - jobname: clang-tsan
          container: 
            image: williamfgc/qmcpack-ci:ubuntu20-openmpi
            options: -u 1001

    steps:
    - name: Checkout Action
      uses: actions/checkout@v1

    - name: Configure
      run: tests/test_automation/github-actions/ci/run_step.sh configure

    - name: Build
      run: tests/test_automation/github-actions/ci/run_step.sh build

    - name: Test
      run: tests/test_automation/github-actions/ci/run_step.sh test
